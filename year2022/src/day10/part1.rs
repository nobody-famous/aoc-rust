use core::AocResult;

use super::utils::{exec, parse};

pub fn solve(file_name: &str) -> AocResult<isize> {
    core::do_work(file_name, get_answer)
}

fn get_answer(lines: Vec<String>) -> AocResult<isize> {
    let ops = parse(lines)?;
    let mut strength: isize = 0;

    exec(&ops, |cycle, x| match cycle {
        20 | 60 | 100 | 140 | 180 | 220 => {
            strength += (cycle as isize) * x;
        }
        _ => (),
    });

    Ok(strength)
}

#[cfg(test)]
mod tests {
    use super::*;

    #[test]
    fn sample() {
        let lines: Vec<String> = vec![
            String::from("addx 15"),
            String::from("addx -11"),
            String::from("addx 6"),
            String::from("addx -3"),
            String::from("addx 5"),
            String::from("addx -1"),
            String::from("addx -8"),
            String::from("addx 13"),
            String::from("addx 4"),
            String::from("noop"),
            String::from("addx -1"),
            String::from("addx 5"),
            String::from("addx -1"),
            String::from("addx 5"),
            String::from("addx -1"),
            String::from("addx 5"),
            String::from("addx -1"),
            String::from("addx 5"),
            String::from("addx -1"),
            String::from("addx -35"),
            String::from("addx 1"),
            String::from("addx 24"),
            String::from("addx -19"),
            String::from("addx 1"),
            String::from("addx 16"),
            String::from("addx -11"),
            String::from("noop"),
            String::from("noop"),
            String::from("addx 21"),
            String::from("addx -15"),
            String::from("noop"),
            String::from("noop"),
            String::from("addx -3"),
            String::from("addx 9"),
            String::from("addx 1"),
            String::from("addx -3"),
            String::from("addx 8"),
            String::from("addx 1"),
            String::from("addx 5"),
            String::from("noop"),
            String::from("noop"),
            String::from("noop"),
            String::from("noop"),
            String::from("noop"),
            String::from("addx -36"),
            String::from("noop"),
            String::from("addx 1"),
            String::from("addx 7"),
            String::from("noop"),
            String::from("noop"),
            String::from("noop"),
            String::from("addx 2"),
            String::from("addx 6"),
            String::from("noop"),
            String::from("noop"),
            String::from("noop"),
            String::from("noop"),
            String::from("noop"),
            String::from("addx 1"),
            String::from("noop"),
            String::from("noop"),
            String::from("addx 7"),
            String::from("addx 1"),
            String::from("noop"),
            String::from("addx -13"),
            String::from("addx 13"),
            String::from("addx 7"),
            String::from("noop"),
            String::from("addx 1"),
            String::from("addx -33"),
            String::from("noop"),
            String::from("noop"),
            String::from("noop"),
            String::from("addx 2"),
            String::from("noop"),
            String::from("noop"),
            String::from("noop"),
            String::from("addx 8"),
            String::from("noop"),
            String::from("addx -1"),
            String::from("addx 2"),
            String::from("addx 1"),
            String::from("noop"),
            String::from("addx 17"),
            String::from("addx -9"),
            String::from("addx 1"),
            String::from("addx 1"),
            String::from("addx -3"),
            String::from("addx 11"),
            String::from("noop"),
            String::from("noop"),
            String::from("addx 1"),
            String::from("noop"),
            String::from("addx 1"),
            String::from("noop"),
            String::from("noop"),
            String::from("addx -13"),
            String::from("addx -19"),
            String::from("addx 1"),
            String::from("addx 3"),
            String::from("addx 26"),
            String::from("addx -30"),
            String::from("addx 12"),
            String::from("addx -1"),
            String::from("addx 3"),
            String::from("addx 1"),
            String::from("noop"),
            String::from("noop"),
            String::from("noop"),
            String::from("addx -9"),
            String::from("addx 18"),
            String::from("addx 1"),
            String::from("addx 2"),
            String::from("noop"),
            String::from("noop"),
            String::from("addx 9"),
            String::from("noop"),
            String::from("noop"),
            String::from("noop"),
            String::from("addx -1"),
            String::from("addx 2"),
            String::from("addx -37"),
            String::from("addx 1"),
            String::from("addx 3"),
            String::from("noop"),
            String::from("addx 15"),
            String::from("addx -21"),
            String::from("addx 22"),
            String::from("addx -6"),
            String::from("addx 1"),
            String::from("noop"),
            String::from("addx 2"),
            String::from("addx 1"),
            String::from("noop"),
            String::from("addx -10"),
            String::from("noop"),
            String::from("noop"),
            String::from("addx 20"),
            String::from("addx 1"),
            String::from("addx 2"),
            String::from("addx 2"),
            String::from("addx -6"),
            String::from("addx -11"),
            String::from("noop"),
            String::from("noop"),
            String::from("noop"),
        ];

        assert_eq!(get_answer(lines).unwrap(), 13140)
    }
}
